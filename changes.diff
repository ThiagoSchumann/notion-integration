diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..f8e44d4
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,123 @@
+# Byte-compiled / optimized / DLL files
+__pycache__/
+*.py[cod]
+*$py.class
+
+# C extensions
+*.so
+
+# Distribution / packaging
+.Python
+build/
+develop-eggs/
+dist/
+downloads/
+eggs/
+.eggs/
+lib/
+lib64/
+parts/
+sdist/
+var/
+wheels/
+share/python-wheels/
+*.egg-info/
+.installed.cfg
+*.egg
+MANIFEST
+
+# PyInstaller
+#  Usually these files are written by a python script from a template
+#  before PyInstaller builds the exe, so as to inject date/other infos into it.
+*.manifest
+*.spec
+
+# Installer logs
+pip-log.txt
+pip-delete-this-directory.txt
+
+# Unit test / coverage reports
+htmlcov/
+.tox/
+.nox/
+.coverage
+.coverage.*
+.cache
+nosetests.xml
+coverage.xml
+*.cover
+.hypothesis/
+*.mo
+*.pot
+
+# Translations
+*.po
+
+# Django stuff:
+*.log
+local_settings.py
+db.sqlite3
+
+# Flask stuff:
+instance/
+.webassets-cache
+
+# Scrapy stuff:
+.scrapy
+
+# Sphinx documentation
+docs/_build/
+docsrc/
+
+# PyBuilder
+target/
+
+# Jupyter Notebook
+.ipynb_checkpoints
+
+# IPython
+profile_default/
+ipython_config.py
+
+# pyenv
+.python-version
+
+# celery beat schedule file
+celerybeat-schedule
+celerybeat.pid
+
+# SageMath parsed files
+*.sage.py
+
+# Environments
+.env
+.venv
+env/
+venv/
+ENV/
+env.bak/
+venv.bak/
+./env/
+
+# Spyder project settings
+.spyderproject
+.spyproject
+
+# Rope project settings
+.ropeproject
+
+# mkdocs documentation
+/site
+
+# mypy
+.mypy_cache/
+.dmypy.json
+dmypy.json
+
+# Pyre type checker
+.pyre/
+
+# Pylint
+.pylint.d/
+
+# End of .gitignore
diff --git a/.vscode/launch.json b/.vscode/launch.json
new file mode 100644
index 0000000..2c92310
--- /dev/null
+++ b/.vscode/launch.json
@@ -0,0 +1,25 @@
+{
+    // Use IntelliSense to learn about possible attributes.
+    // Hover to view descriptions of existing attributes.
+    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
+    "version": "0.2.0",
+    "configurations": [
+        {
+            "name": "Python Debugger: Flask",
+            "type": "debugpy",
+            "request": "launch",
+            "module": "flask",
+            "env": {
+                "FLASK_APP": "main.py",
+                "FLASK_DEBUG": "1"
+            },
+            "args": [
+                "run",
+                "--no-debugger",
+                "--no-reload"
+            ],
+            "jinja": true,
+            "autoStartBrowser": false
+        }
+    ]
+}
\ No newline at end of file
diff --git a/Dockerfile b/Dockerfile
new file mode 100644
index 0000000..b7e1b07
--- /dev/null
+++ b/Dockerfile
@@ -0,0 +1,6 @@
+FROM python:3.9-slim
+WORKDIR /app
+COPY requirements.txt requirements.txt
+RUN pip install -r requirements.txt
+COPY . .
+CMD ["python", "main.py"]
diff --git a/README.md b/README.md
new file mode 100644
index 0000000..8b66cd3
--- /dev/null
+++ b/README.md
@@ -0,0 +1,3 @@
+# Notion API Integration
+
+This project demonstrates a Notion API integration using Flask.
diff --git a/config.py b/config.py
new file mode 100644
index 0000000..252eec3
--- /dev/null
+++ b/config.py
@@ -0,0 +1,9 @@
+import os
+from dotenv import load_dotenv
+
+load_dotenv()
+
+class Config:
+    NOTION_API_URL = os.getenv('NOTION_API_URL')
+    NOTION_API_KEY = os.getenv('NOTION_API_KEY')
+    NOTION_VERSION = os.getenv('NOTION_VERSION')
diff --git a/docker-compose.yml b/docker-compose.yml
new file mode 100644
index 0000000..7fe3af3
--- /dev/null
+++ b/docker-compose.yml
@@ -0,0 +1,8 @@
+version: '3.8'
+services:
+  web:
+    build: .
+    ports:
+      - "5000:5000"
+    environment:
+      - FLASK_ENV=development
diff --git a/main.py b/main.py
new file mode 100644
index 0000000..6ac23bf
--- /dev/null
+++ b/main.py
@@ -0,0 +1,6 @@
+from src.infra.http_server.http_server import create_app
+
+app = create_app()
+
+if __name__ == '__main__':
+    app.run(debug=True)
diff --git a/requirements.txt b/requirements.txt
new file mode 100644
index 0000000..2d139d5
--- /dev/null
+++ b/requirements.txt
@@ -0,0 +1,3 @@
+Flask
+requests
+python-dotenv
diff --git a/src/application/repositories/notion_repo.py b/src/application/repositories/notion_repo.py
new file mode 100644
index 0000000..8b616f9
--- /dev/null
+++ b/src/application/repositories/notion_repo.py
@@ -0,0 +1,7 @@
+from abc import ABC, abstractmethod
+from src.domain.entities.account_balance import AccountBalance
+
+class NotionRepository(ABC):
+    @abstractmethod
+    def get_account_balance(self) -> AccountBalance:
+        pass
diff --git a/src/application/use_cases/notion/get_account_balance_use_case.py b/src/application/use_cases/notion/get_account_balance_use_case.py
new file mode 100644
index 0000000..9b33a8c
--- /dev/null
+++ b/src/application/use_cases/notion/get_account_balance_use_case.py
@@ -0,0 +1,9 @@
+from src.application.repositories.notion_repo import NotionRepository
+from src.domain.entities.account_balance import AccountBalance
+
+class GetAccountBalanceUseCase:
+    def __init__(self, notion_repository: NotionRepository):
+        self.notion_repository = notion_repository
+    
+    def execute(self) -> AccountBalance:
+        return self.notion_repository.get_account_balance()
diff --git a/src/domain/entities/account_balance.py b/src/domain/entities/account_balance.py
new file mode 100644
index 0000000..965ae9d
--- /dev/null
+++ b/src/domain/entities/account_balance.py
@@ -0,0 +1,3 @@
+class AccountBalance:
+    def __init__(self, total: float):
+        self.total = total
diff --git a/src/domain/routes/notion_routes.py b/src/domain/routes/notion_routes.py
new file mode 100644
index 0000000..fdb65dc
--- /dev/null
+++ b/src/domain/routes/notion_routes.py
@@ -0,0 +1,11 @@
+from flask import Blueprint, jsonify
+from src.application.use_cases.notion.get_account_balance_use_case import GetAccountBalanceUseCase
+from src.infra.notion.notion_adapter import NotionAdapter
+
+notion_bp = Blueprint('notion', __name__)
+
+@notion_bp.route('/account-balance', methods=['GET'])
+def get_account_balance():
+    use_case = GetAccountBalanceUseCase(NotionAdapter())
+    account_balance = use_case.execute()
+    return jsonify({"account_balance": account_balance.total})
diff --git a/src/infra/http_server/http_server.py b/src/infra/http_server/http_server.py
new file mode 100644
index 0000000..555a98e
--- /dev/null
+++ b/src/infra/http_server/http_server.py
@@ -0,0 +1,7 @@
+from flask import Flask
+from src.domain.routes.notion_routes import notion_bp
+
+def create_app():
+    app = Flask(__name__)
+    app.register_blueprint(notion_bp, url_prefix='/api/v1')
+    return app
diff --git a/src/infra/notion/notion_adapter.py b/src/infra/notion/notion_adapter.py
new file mode 100644
index 0000000..fd73f78
--- /dev/null
+++ b/src/infra/notion/notion_adapter.py
@@ -0,0 +1,24 @@
+import requests
+from src.application.repositories.notion_repo import NotionRepository
+from src.domain.entities.account_balance import AccountBalance
+from config import Config
+
+class NotionAdapter(NotionRepository):
+    def get_account_balance(self) -> AccountBalance:
+        headers = {
+            'Authorization': f'Bearer {Config.NOTION_API_KEY}',
+            'Notion-Version': Config.NOTION_VERSION,
+            'Content-Type': 'application/json',
+        }
+
+        response = requests.post(Config.NOTION_API_URL, headers=headers, json={})
+        data = response.json()
+        
+        if data.get("results"):
+            page = data["results"][0]
+            rollup = page["properties"].get("Rollup")
+            if rollup and rollup["type"] == "rollup" and rollup["rollup"]["type"] == "number":
+                total = rollup["rollup"]["number"]
+                return AccountBalance(total)
+        
+        return AccountBalance(0.0)
